{
  "_id": "_design/all",

  "validate_doc_update": "function(newDoc, oldDoc, userCtx) { if (newDoc['@type'] === 'WebPage') { if (!newDoc.url) { throw({forbidden: 'Document must have a url.'}); } } if (newDoc['@type'] === 'Identity') { if (!newDoc['@id'] || !newDoc.password) { throw({forbidden: 'User must have a username and password.'}); } } }",

  "views": {
    "urls": {
      "map": "function(doc) { emit(doc.url, doc.url); }"
    },
    "webpages": {
      "map": "function(doc) { if(doc['@type'] === 'WebPage') { emit(doc._id,doc); } }"
    },
    "persons": {
      "map": "function(doc) { if(doc['@type'] === 'Person') { emit(doc.url,doc); } }"
    },
    "users": {
      "map": "function(doc) { if(doc['@type'] === 'Identity') { emit([doc['@id'], doc.created],doc); } }"
    },
    "usernames": {
      "map": "function(doc) { if(doc['@type'] === 'Identity') { emit(doc['@id'],doc['@id']); } }",
      "reduce": "function(keys, values) { return { '@id' : values[0] }; }"
    },
    "identities": {
      "map": "function(doc) { if(doc['@type'] === 'Identity') { emit(doc._id,doc); } }"
    },
    "reviews": {
      "map": "function(doc) { if(doc['@type'] === 'WebPage') { emit([doc.lastReviewed, doc._id],doc); } }"
    },
    "by_name": {
      "map": "function(doc) { if ('name' in doc) { emit(doc.name, doc['@type']); } }"
    },
    "by_reviewer": {
      "map": "function(doc) { if (doc['@type'] === 'Person') { emit([doc._id], doc); } else if (doc['@type'] === 'WebPage') { emit([doc.reviewedBy['@id'], doc._id], doc); } }"
    }
  }
}
